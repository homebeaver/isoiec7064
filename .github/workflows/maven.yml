# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# The name of workflow. GitHub displays the names on repository's actions page. 
# If omitted, GitHub sets it to the workflow file path relative to the root of the repository.
# see: https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
name: Java CI with Maven

# Triggered when code is pushed to any branch in a repository
on:
  push:
    branches: [ "master" ]
# Triggers the workflow on push or pull request events
#on: [push, pull_request]
# Triggers on event release with type created
#on:
#  release:
#    types: [created]

jobs:
  greeting_job:
    runs-on: ubuntu-latest
    env:
      Greeting: Hello
    steps:
      - name: "Say Hello Mona it's Monday"
        run: echo "$MY_VARIABLE_NAME" "$First_Name" "${{ my.variable.name }}" "${{ github.event.name }}"
        env:
          First_Name: Mona

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8, 17 ]
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
# Available lifecycle phases are: validate, initialize, generate-sources, process-sources, generate-resources, 
# process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, 
# process-test-resources, test-compile, process-test-classes, test, prepare-package, package, 
# pre-integration-test, integration-test, post-integration-test, verify, install, deploy, 
# pre-clean, clean, post-clean, pre-site, site, post-site, site-deploy. 
#      run: mvn -V --batch-mode package
      run: mvn -V --errors --show-version --batch-mode --no-transfer-progress -Ddoclint=all package

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
